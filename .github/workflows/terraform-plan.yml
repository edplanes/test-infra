name: Terraform Plan

on:
  pull_request:

env:
  CONFIG_DIRECTORY: "./configs/terraform"
  HCLOUD_TOKEN: ${{ secrets.HCLOUD_TOKEN }}

permissions:
  contents: read
  pull-requests: write

jobs:
  terraform:
    runs-on: ubuntu-latest
    name: Terraform Plan
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform with specified version on the runner
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.6
          cli_config_credentials_token: ${{ secrets.TF_CLOUD_TOKEN }}

      - name: Terraform Init
        id: init
        working-directory: ${{ env.CONFIG_DIRECTORY }}
        run: terraform init -input=false -no-color

      - name: Terraform Format
        id: fmt
        working-directory: ${{ env.CONFIG_DIRECTORY }}
        run: terraform fmt -check -recursive

      - name: Terraform Validate
        id: validate
        working-directory: ${{ env.CONFIG_DIRECTORY }}
        run: terraform validate -no-color

      - name: Terraform plan
        id: plan
        run: terraform plan -no-color -input=false
        continue-on-error: true

      - uses: actions/github-script@v6
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
  
            <details><summary>Show Plan</summary>
  
            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`
  
            </details>
            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
  
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
